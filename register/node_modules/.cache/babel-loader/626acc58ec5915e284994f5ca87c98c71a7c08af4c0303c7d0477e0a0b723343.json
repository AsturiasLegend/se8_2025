{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport TopBar from '@/components/TopBar.vue';\nimport { ElMessageBox, ElMessage } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  __name: 'RegisterUserView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const username = ref('');\n    const name = ref('');\n    const phone = ref(''); // 新增手机号码字段\n    const idCard = ref(''); // 新增身份证号字段（可选）\n    const gender = ref('');\n    const age = ref('');\n    const password = ref('');\n    const confirm = ref('');\n    const router = useRouter();\n    const submit = async () => {\n      // 检查必填字段\n      if (!username.value || !name.value || !phone.value || !gender.value || !age.value || !password.value || !confirm.value) {\n        ElMessage.warning('请填写所有必填字段');\n        return;\n      }\n\n      // 简化验证：仅验证手机号长度\n      if (phone.value.length !== 11) {\n        ElMessage.error('手机号必须为11位');\n        return;\n      }\n\n      // 简化验证：如果填写了身份证号，只验证长度（18位）\n      if (idCard.value && idCard.value.length !== 18) {\n        ElMessage.error('身份证号必须为18位');\n        return;\n      }\n\n      // 验证密码一致性\n      if (password.value !== confirm.value) {\n        ElMessage.error('两次输入密码不一致');\n        return;\n      }\n      try {\n        const res = await axios.post('http://localhost:8000/register/', {\n          username: username.value,\n          real_name: name.value,\n          phone: phone.value,\n          id_card: idCard.value || null,\n          // 如果为空，发送null\n          gender: gender.value === '男' ? 'M' : 'F',\n          age: age.value,\n          password: password.value,\n          role: 'patient' // ✅ 固定为患者注册\n        });\n        if (res.data.status === 'success') {\n          ElMessageBox.alert('注册成功！点击确定返回首页', '注册成功', {\n            confirmButtonText: '确定',\n            callback: () => {\n              router.push('/entry');\n            }\n          });\n        } else {\n          ElMessage.error(res.data.message || '注册失败');\n        }\n      } catch (e) {\n        console.error(e.response?.data || e);\n        ElMessage.error(e.response?.data?.message || '服务器连接失败');\n      }\n    };\n    const __returned__ = {\n      username,\n      name,\n      phone,\n      idCard,\n      gender,\n      age,\n      password,\n      confirm,\n      router,\n      submit,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      TopBar,\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","TopBar","ElMessageBox","ElMessage","axios","username","name","phone","idCard","gender","age","password","confirm","router","submit","value","warning","length","error","res","post","real_name","id_card","role","data","status","alert","confirmButtonText","callback","push","message","e","console","response"],"sources":["D:/SoftWareEngerning_DatabaseStation/register/src/views/RegisterUserView.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-page\">\r\n    <TopBar title=\"用户注册\" />\r\n\r\n    <div class=\"register-card\">\r\n      <h2>创建新账号</h2>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" v-model=\"username\" placeholder=\"用户名\" />\r\n        <input type=\"text\" v-model=\"name\" placeholder=\"姓名\" />\r\n        \r\n        <!-- 手机号码 (新增) -->\r\n        <input type=\"text\" v-model=\"phone\" placeholder=\"手机号码\" />\r\n        \r\n        <!-- 身份证号 (新增，可选) -->\r\n        <input type=\"text\" v-model=\"idCard\" placeholder=\"身份证号 (选填)\" />\r\n\r\n        <!-- 性别下拉 -->\r\n        <select v-model=\"gender\">\r\n          <option value=\"\" disabled>请选择性别</option>\r\n          <option value=\"男\">男</option>\r\n          <option value=\"女\">女</option>\r\n        </select>\r\n\r\n        <!-- 年龄下拉 -->\r\n        <select v-model=\"age\">\r\n          <option value=\"\" disabled>请选择年龄</option>\r\n          <option v-for=\"n in 100\" :key=\"n\" :value=\"n\">{{ n }}</option>\r\n        </select>\r\n\r\n        <input type=\"password\" v-model=\"password\" placeholder=\"密码\" />\r\n        <input type=\"password\" v-model=\"confirm\" placeholder=\"确认密码\" />\r\n      </div>\r\n\r\n      <button class=\"register-btn\" @click=\"submit\">注册</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport TopBar from '@/components/TopBar.vue'\r\nimport { ElMessageBox, ElMessage } from 'element-plus'\r\nimport axios from 'axios'\r\n\r\nconst username = ref('')\r\nconst name = ref('')\r\nconst phone = ref('') // 新增手机号码字段\r\nconst idCard = ref('') // 新增身份证号字段（可选）\r\nconst gender = ref('')\r\nconst age = ref('')\r\nconst password = ref('')\r\nconst confirm = ref('')\r\nconst router = useRouter()\r\n\r\nconst submit = async () => {\r\n  // 检查必填字段\r\n  if (!username.value || !name.value || !phone.value || !gender.value || !age.value || !password.value || !confirm.value) {\r\n    ElMessage.warning('请填写所有必填字段')\r\n    return\r\n  }\r\n  \r\n  // 简化验证：仅验证手机号长度\r\n  if (phone.value.length !== 11) {\r\n    ElMessage.error('手机号必须为11位')\r\n    return\r\n  }\r\n  \r\n  // 简化验证：如果填写了身份证号，只验证长度（18位）\r\n  if (idCard.value && idCard.value.length !== 18) {\r\n    ElMessage.error('身份证号必须为18位')\r\n    return\r\n  }\r\n  \r\n  // 验证密码一致性\r\n  if (password.value !== confirm.value) {\r\n    ElMessage.error('两次输入密码不一致')\r\n    return\r\n  }\r\n\r\n  try {\r\n    const res = await axios.post('http://localhost:8000/register/', {\r\n      username: username.value,\r\n      real_name: name.value,\r\n      phone: phone.value,\r\n      id_card: idCard.value || null, // 如果为空，发送null\r\n      gender: gender.value === '男' ? 'M' : 'F',\r\n      age: age.value,\r\n      password: password.value,\r\n      role: 'patient' // ✅ 固定为患者注册\r\n    })\r\n\r\n    if (res.data.status === 'success') {\r\n      ElMessageBox.alert('注册成功！点击确定返回首页', '注册成功', {\r\n        confirmButtonText: '确定',\r\n        callback: () => {\r\n          router.push('/entry')\r\n        }\r\n      })\r\n    } else {\r\n      ElMessage.error(res.data.message || '注册失败')\r\n    }\r\n  } catch (e) {\r\n    console.error(e.response?.data || e)\r\n    ElMessage.error(e.response?.data?.message || '服务器连接失败')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-page {\r\n  padding-top: 120px;\r\n  background: #eef3f5;\r\n  height: 100vh;\r\n}\r\n.register-card {\r\n  background: white;\r\n  width: 360px;\r\n  margin: 0 auto;\r\n  padding: 40px;\r\n  border-radius: 16px;\r\n  text-align: center;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\r\n}\r\nh2 {\r\n  margin-bottom: 24px;\r\n}\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  margin-bottom: 20px;\r\n}\r\ninput {\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n}\r\nselect {\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  background-color: white;\r\n}\r\n.register-btn {\r\n  background: #0056ba;\r\n  color: white;\r\n  font-size: 16px;\r\n  padding: 12px;\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}