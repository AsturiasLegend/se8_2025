{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport { useUserStore } from '@/stores/userStore'; // ✅ 引入 pinia 状态管理\n\n// 页面组件导入\nimport EntryView from '@/views/EntryView.vue';\nimport LoginView from '@/views/LoginView.vue';\nimport RegisterUserView from '@/views/RegisterUserView.vue';\nimport UserDashboard from '@/views/patient/PatientDashboard.vue';\nimport PatientRegisterView from '@/views/patient/PatientRegisterView.vue';\nimport DoctorDashboard from '@/views/doctor/DoctorDashboard.vue';\nimport AdminDashboard from '@/views/admin/AdminDashboard.vue';\nconst routes = [{\n  path: '/',\n  redirect: '/entry'\n},\n// 公共页面\n{\n  path: '/entry',\n  name: 'Entry',\n  component: EntryView\n}, {\n  path: '/login',\n  name: 'Login',\n  component: LoginView\n}, {\n  path: '/register-user',\n  name: 'RegisterUser',\n  component: RegisterUserView\n},\n// 患者页面\n{\n  path: '/patient/dashboard',\n  name: 'PatientDashboard',\n  component: UserDashboard\n}, {\n  path: '/patient/register',\n  name: 'PatientRegister',\n  component: PatientRegisterView\n},\n// 医生页面\n{\n  path: '/doctor/dashboard',\n  name: 'DoctorDashboard',\n  component: DoctorDashboard\n},\n// 管理员页面\n{\n  path: '/admin/dashboard',\n  name: 'AdminDashboard',\n  component: AdminDashboard\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// ✅ 全局路由守卫：统一校验登录状态与角色访问权限\nrouter.beforeEach((to, from, next) => {\n  const userStore = useUserStore();\n  const role = userStore.role;\n  const isLoggedIn = !!role;\n  const rolePathMap = {\n    patient: '/patient/',\n    doctor: '/doctor/',\n    admin: '/admin/'\n  };\n  const isProtectedPath = to.path.startsWith('/patient') || to.path.startsWith('/doctor') || to.path.startsWith('/admin');\n  if (isProtectedPath) {\n    if (!isLoggedIn) {\n      return next('/login');\n    }\n    const allowedPrefix = rolePathMap[role];\n    if (!to.path.startsWith(allowedPrefix)) {\n      return next('/login');\n    }\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","useUserStore","EntryView","LoginView","RegisterUserView","UserDashboard","PatientRegisterView","DoctorDashboard","AdminDashboard","routes","path","redirect","name","component","router","history","process","env","BASE_URL","beforeEach","to","from","next","userStore","role","isLoggedIn","rolePathMap","patient","doctor","admin","isProtectedPath","startsWith","allowedPrefix"],"sources":["E:/ZJU_Courses/CS/se/prj/2025se/register/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport { useUserStore } from '@/stores/userStore' // ✅ 引入 pinia 状态管理\r\n\r\n// 页面组件导入\r\nimport EntryView from '@/views/EntryView.vue'\r\nimport LoginView from '@/views/LoginView.vue'\r\nimport RegisterUserView from '@/views/RegisterUserView.vue'\r\nimport UserDashboard from '@/views/patient/PatientDashboard.vue'\r\nimport PatientRegisterView from '@/views/patient/PatientRegisterView.vue'\r\nimport DoctorDashboard from '@/views/doctor/DoctorDashboard.vue'\r\nimport AdminDashboard from '@/views/admin/AdminDashboard.vue'\r\n\r\nconst routes = [\r\n  { path: '/', redirect: '/entry' },\r\n\r\n  // 公共页面\r\n  { path: '/entry', name: 'Entry', component: EntryView },\r\n  { path: '/login', name: 'Login', component: LoginView },\r\n  { path: '/register-user', name: 'RegisterUser', component: RegisterUserView },\r\n\r\n  // 患者页面\r\n  { path: '/patient/dashboard', name: 'PatientDashboard', component: UserDashboard },\r\n  { path: '/patient/register', name: 'PatientRegister', component: PatientRegisterView },\r\n\r\n  // 医生页面\r\n  { path: '/doctor/dashboard', name: 'DoctorDashboard', component: DoctorDashboard },\r\n\r\n  // 管理员页面\r\n  { path: '/admin/dashboard', name: 'AdminDashboard', component: AdminDashboard }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\n// ✅ 全局路由守卫：统一校验登录状态与角色访问权限\r\nrouter.beforeEach((to, from, next) => {\r\n  const userStore = useUserStore()\r\n  const role = userStore.role\r\n  const isLoggedIn = !!role\r\n\r\n  const rolePathMap = {\r\n    patient: '/patient/',\r\n    doctor: '/doctor/',\r\n    admin: '/admin/'\r\n  }\r\n\r\n  const isProtectedPath =\r\n    to.path.startsWith('/patient') ||\r\n    to.path.startsWith('/doctor') ||\r\n    to.path.startsWith('/admin')\r\n\r\n  if (isProtectedPath) {\r\n    if (!isLoggedIn) {\r\n      return next('/login')\r\n    }\r\n\r\n    const allowedPrefix = rolePathMap[role]\r\n    if (!to.path.startsWith(allowedPrefix)) {\r\n      return next('/login')\r\n    }\r\n  }\r\n\r\n  next()\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,SAASC,YAAY,QAAQ,oBAAoB,EAAC;;AAElD;AACA,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,aAAa,MAAM,sCAAsC;AAChE,OAAOC,mBAAmB,MAAM,yCAAyC;AACzE,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAOC,cAAc,MAAM,kCAAkC;AAE7D,MAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,QAAQ,EAAE;AAAS,CAAC;AAEjC;AACA;EAAED,IAAI,EAAE,QAAQ;EAAEE,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEX;AAAU,CAAC,EACvD;EAAEQ,IAAI,EAAE,QAAQ;EAAEE,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEV;AAAU,CAAC,EACvD;EAAEO,IAAI,EAAE,gBAAgB;EAAEE,IAAI,EAAE,cAAc;EAAEC,SAAS,EAAET;AAAiB,CAAC;AAE7E;AACA;EAAEM,IAAI,EAAE,oBAAoB;EAAEE,IAAI,EAAE,kBAAkB;EAAEC,SAAS,EAAER;AAAc,CAAC,EAClF;EAAEK,IAAI,EAAE,mBAAmB;EAAEE,IAAI,EAAE,iBAAiB;EAAEC,SAAS,EAAEP;AAAoB,CAAC;AAEtF;AACA;EAAEI,IAAI,EAAE,mBAAmB;EAAEE,IAAI,EAAE,iBAAiB;EAAEC,SAAS,EAAEN;AAAgB,CAAC;AAElF;AACA;EAAEG,IAAI,EAAE,kBAAkB;EAAEE,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAEL;AAAe,CAAC,CAChF;AAED,MAAMM,MAAM,GAAGf,YAAY,CAAC;EAC1BgB,OAAO,EAAEf,gBAAgB,CAACgB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CT;AACF,CAAC,CAAC;;AAEF;AACAK,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,SAAS,GAAGtB,YAAY,CAAC,CAAC;EAChC,MAAMuB,IAAI,GAAGD,SAAS,CAACC,IAAI;EAC3B,MAAMC,UAAU,GAAG,CAAC,CAACD,IAAI;EAEzB,MAAME,WAAW,GAAG;IAClBC,OAAO,EAAE,WAAW;IACpBC,MAAM,EAAE,UAAU;IAClBC,KAAK,EAAE;EACT,CAAC;EAED,MAAMC,eAAe,GACnBV,EAAE,CAACV,IAAI,CAACqB,UAAU,CAAC,UAAU,CAAC,IAC9BX,EAAE,CAACV,IAAI,CAACqB,UAAU,CAAC,SAAS,CAAC,IAC7BX,EAAE,CAACV,IAAI,CAACqB,UAAU,CAAC,QAAQ,CAAC;EAE9B,IAAID,eAAe,EAAE;IACnB,IAAI,CAACL,UAAU,EAAE;MACf,OAAOH,IAAI,CAAC,QAAQ,CAAC;IACvB;IAEA,MAAMU,aAAa,GAAGN,WAAW,CAACF,IAAI,CAAC;IACvC,IAAI,CAACJ,EAAE,CAACV,IAAI,CAACqB,UAAU,CAACC,aAAa,CAAC,EAAE;MACtC,OAAOV,IAAI,CAAC,QAAQ,CAAC;IACvB;EACF;EAEAA,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}