{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-4\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"登录\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event),\n    placeholder: \"用户名\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    type: \"password\",\n    placeholder: \"密码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _createElementVNode(\"button\", {\n    onClick: $setup.login\n  }, \"登录\"), $setup.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$setup","username","placeholder","password","type","onClick","login","error","_hoisted_2","_toDisplayString","_createCommentVNode"],"sources":["E:\\ZJU_Courses\\CS\\se\\register\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"p-4\">\r\n    <h2>登录</h2>\r\n    <input v-model=\"username\" placeholder=\"用户名\" />\r\n    <input v-model=\"password\" type=\"password\" placeholder=\"密码\" />\r\n    <button @click=\"login\">登录</button>\r\n    <p v-if=\"error\" style=\"color:red\">{{ error }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from '../api'\r\nimport { useRouter } from 'vue-router'\r\n\r\nconst username = ref('')\r\nconst password = ref('')\r\nconst error = ref('')\r\nconst router = useRouter()\r\n\r\nconst login = async () => {\r\n  try {\r\n    await axios.post('/login/', {\r\n      username: username.value,\r\n      password: password.value\r\n    })\r\n    router.push('/dashboard')\r\n  } catch (err) {\r\n    error.value = '登录失败，请检查用户名或密码'\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;EADlBC,GAAA;EAMoBC,KAAiB,EAAjB;IAAA;EAAA;;;uBALlBC,mBAAA,CAMM,OANNC,UAMM,G,0BALJC,mBAAA,CAAW,YAAP,IAAE,sB,gBACNA,mBAAA,CAA8C;IAHlD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGoBC,MAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAtBF,MAAA,CAAAC,QAAQ,E,mBACxBJ,mBAAA,CAA6D;IAJjE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIoBC,MAAA,CAAAG,QAAQ,GAAAJ,MAAA;IAAEK,IAAI,EAAC,UAAU;IAACF,WAAW,EAAC;iDAAtCF,MAAA,CAAAG,QAAQ,E,GACxBN,mBAAA,CAAkC;IAAzBQ,OAAK,EAAEL,MAAA,CAAAM;EAAK,GAAE,IAAE,GAChBN,MAAA,CAAAO,KAAK,I,cAAdZ,mBAAA,CAAiD,KAAjDa,UAAiD,EAAAC,gBAAA,CAAZT,MAAA,CAAAO,KAAK,oBAN9CG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}