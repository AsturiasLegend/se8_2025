{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport TopBar from '@/components/TopBar.vue';\nimport { ElMessageBox, ElMessage } from 'element-plus';\nexport default {\n  __name: 'RegisterUserView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const username = ref('');\n    const name = ref('');\n    const gender = ref('');\n    const age = ref('');\n    const password = ref('');\n    const confirm = ref('');\n    const router = useRouter();\n    const submit = async () => {\n      if (!username.value || !name.value || !gender.value || !age.value || !password.value || !confirm.value) {\n        ElMessage.warning('请填写所有字段');\n        return;\n      }\n      if (password.value !== confirm.value) {\n        ElMessage.error('两次输入密码不一致');\n        return;\n      }\n      ElMessageBox.alert('注册成功！点击确定返回首页', '注册成功', {\n        confirmButtonText: '确定',\n        callback: () => {\n          router.push('/');\n        }\n      });\n      try {\n        const res = await fetch('http://localhost:8000/register/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: username.value,\n            name: name.value,\n            gender: gender.value,\n            age: age.value,\n            password: password.value\n          })\n        });\n        const data = await res.json();\n        if (data.status === 'success') {\n          ElMessage.success('注册成功，请登录');\n          router.push('/');\n        } else {\n          ElMessage.error(data.message || '注册失败');\n        }\n      } catch (e) {\n        ElMessage.error('服务器连接失败');\n      }\n    };\n    const __returned__ = {\n      username,\n      name,\n      gender,\n      age,\n      password,\n      confirm,\n      router,\n      submit,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      TopBar,\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","TopBar","ElMessageBox","ElMessage","username","name","gender","age","password","confirm","router","submit","value","warning","error","alert","confirmButtonText","callback","push","res","fetch","method","headers","body","JSON","stringify","data","json","status","success","message","e"],"sources":["E:/ZJU_Courses/CS/se/register/src/views/RegisterUserView.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-page\">\r\n    <TopBar title=\"用户注册\" />\r\n\r\n    <div class=\"register-card\">\r\n      <h2>创建新账号</h2>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" v-model=\"username\" placeholder=\"用户名\" />\r\n        <input type=\"text\" v-model=\"name\" placeholder=\"姓名\" />\r\n        \r\n        <!-- ✅ 性别下拉 -->\r\n        <select v-model=\"gender\">\r\n          <option value=\"\" disabled>请选择性别</option>\r\n          <option value=\"男\">男</option>\r\n          <option value=\"女\">女</option>\r\n        </select>\r\n\r\n        <!-- ✅ 年龄下拉 -->\r\n        <select v-model=\"age\">\r\n          <option value=\"\" disabled>请选择年龄</option>\r\n          <option v-for=\"n in 100\" :key=\"n\" :value=\"n\">{{ n }}</option>\r\n        </select>\r\n\r\n        <input type=\"password\" v-model=\"password\" placeholder=\"密码\" />\r\n        <input type=\"password\" v-model=\"confirm\" placeholder=\"确认密码\" />\r\n      </div>\r\n\r\n      <button class=\"register-btn\" @click=\"submit\">注册</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport TopBar from '@/components/TopBar.vue'\r\nimport { ElMessageBox, ElMessage } from 'element-plus'\r\n\r\nconst username = ref('')\r\nconst name = ref('')\r\nconst gender = ref('')\r\nconst age = ref('')\r\nconst password = ref('')\r\nconst confirm = ref('')\r\nconst router = useRouter()\r\n\r\nconst submit = async () => {\r\n  if (!username.value || !name.value || !gender.value || !age.value || !password.value || !confirm.value) {\r\n    ElMessage.warning('请填写所有字段')\r\n    return\r\n  }\r\n  if (password.value !== confirm.value) {\r\n    ElMessage.error('两次输入密码不一致')\r\n    return\r\n  }\r\n  ElMessageBox.alert('注册成功！点击确定返回首页', '注册成功', {\r\n    confirmButtonText: '确定',\r\n    callback: () => {\r\n      router.push('/')\r\n    }\r\n  })\r\n\r\n  try {\r\n    const res = await fetch('http://localhost:8000/register/', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        username: username.value,\r\n        name: name.value,\r\n        gender: gender.value,\r\n        age: age.value,\r\n        password: password.value\r\n      })\r\n    })\r\n    const data = await res.json()\r\n    if (data.status === 'success') {\r\n      ElMessage.success('注册成功，请登录')\r\n      router.push('/')\r\n    } else {\r\n      ElMessage.error(data.message || '注册失败')\r\n    }\r\n  } catch (e) {\r\n    ElMessage.error('服务器连接失败')\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.register-page {\r\n  padding-top: 120px;\r\n  background: #eef3f5;\r\n  height: 100vh;\r\n}\r\n.register-card {\r\n  background: white;\r\n  width: 360px;\r\n  margin: 0 auto;\r\n  padding: 40px;\r\n  border-radius: 16px;\r\n  text-align: center;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\r\n}\r\nh2 {\r\n  margin-bottom: 24px;\r\n}\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  margin-bottom: 20px;\r\n}\r\ninput {\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n}\r\n.register-btn {\r\n  background: #0056ba;\r\n  color: white;\r\n  font-size: 16px;\r\n  padding: 12px;\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\nselect {\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  background-color: white;\r\n}\r\n</style>\r\n"],"mappings":";AAkCA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,YAAY,EAAEC,SAAS,QAAQ,cAAc;;;;;;;IAEtD,MAAMC,QAAQ,GAAGL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,IAAI,GAAGN,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMO,MAAM,GAAGP,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMQ,GAAG,GAAGR,GAAG,CAAC,EAAE,CAAC;IACnB,MAAMS,QAAQ,GAAGT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMU,OAAO,GAAGV,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMW,MAAM,GAAGV,SAAS,CAAC,CAAC;IAE1B,MAAMW,MAAM,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI,CAACP,QAAQ,CAACQ,KAAK,IAAI,CAACP,IAAI,CAACO,KAAK,IAAI,CAACN,MAAM,CAACM,KAAK,IAAI,CAACL,GAAG,CAACK,KAAK,IAAI,CAACJ,QAAQ,CAACI,KAAK,IAAI,CAACH,OAAO,CAACG,KAAK,EAAE;QACtGT,SAAS,CAACU,OAAO,CAAC,SAAS,CAAC;QAC5B;MACF;MACA,IAAIL,QAAQ,CAACI,KAAK,KAAKH,OAAO,CAACG,KAAK,EAAE;QACpCT,SAAS,CAACW,KAAK,CAAC,WAAW,CAAC;QAC5B;MACF;MACAZ,YAAY,CAACa,KAAK,CAAC,eAAe,EAAE,MAAM,EAAE;QAC1CC,iBAAiB,EAAE,IAAI;QACvBC,QAAQ,EAAEA,CAAA,KAAM;UACdP,MAAM,CAACQ,IAAI,CAAC,GAAG,CAAC;QAClB;MACF,CAAC,CAAC;MAEF,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UACzDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBrB,QAAQ,EAAEA,QAAQ,CAACQ,KAAK;YACxBP,IAAI,EAAEA,IAAI,CAACO,KAAK;YAChBN,MAAM,EAAEA,MAAM,CAACM,KAAK;YACpBL,GAAG,EAAEA,GAAG,CAACK,KAAK;YACdJ,QAAQ,EAAEA,QAAQ,CAACI;UACrB,CAAC;QACH,CAAC,CAAC;QACF,MAAMc,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;QAC7B,IAAID,IAAI,CAACE,MAAM,KAAK,SAAS,EAAE;UAC7BzB,SAAS,CAAC0B,OAAO,CAAC,UAAU,CAAC;UAC7BnB,MAAM,CAACQ,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC,MAAM;UACLf,SAAS,CAACW,KAAK,CAACY,IAAI,CAACI,OAAO,IAAI,MAAM,CAAC;QACzC;MACF,CAAC,CAAC,OAAOC,CAAC,EAAE;QACV5B,SAAS,CAACW,KAAK,CAAC,SAAS,CAAC;MAC5B;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}