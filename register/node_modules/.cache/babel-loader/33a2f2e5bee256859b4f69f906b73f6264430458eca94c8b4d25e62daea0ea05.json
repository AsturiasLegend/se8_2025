{"ast":null,"code":"import { createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../assets/avatar.png';\nconst _hoisted_1 = {\n  class: \"login-page\"\n};\nconst _hoisted_2 = {\n  class: \"login-card\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode($setup[\"TopBar\"]), _createCommentVNode(\" ✅ 添加背景图模糊容器 \"), _createElementVNode(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"bg-blur-overlay\"\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" 登录卡片在上面 \"), _createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"img\", {\n    class: \"avatar\",\n    src: _imports_0,\n    alt: \"avatar\"\n  }, null, -1 /* HOISTED */)), _cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"欢迎回来\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"用户名\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    placeholder: \"密码\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]])]), _createElementVNode(\"button\", {\n    class: \"login-btn\",\n    onClick: $setup.handleLogin\n  }, \"登录\")])])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementBlock","_createVNode","$setup","_createCommentVNode","_createElementVNode","_hoisted_1","_hoisted_2","src","alt","_hoisted_3","type","placeholder","_cache","$event","username","password","onClick","handleLogin"],"sources":["E:\\ZJU_Courses\\CS\\se\\prj\\2025se\\register\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <TopBar />\r\n\r\n    <!-- ✅ 添加背景图模糊容器 -->\r\n    <div class=\"login-page\">\r\n      <div class=\"bg-blur-overlay\"></div>\r\n\r\n      <!-- 登录卡片在上面 -->\r\n      <div class=\"login-card\">\r\n        <img class=\"avatar\" src=\"../assets/avatar.png\" alt=\"avatar\" />\r\n        <h2>欢迎回来</h2>\r\n\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"用户名\" v-model=\"username\" />\r\n          <input type=\"password\" placeholder=\"密码\" v-model=\"password\" />\r\n        </div>\r\n\r\n        <button class=\"login-btn\" @click=\"handleLogin\">登录</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from 'axios'\r\nimport { useRouter } from 'vue-router'\r\n//import { ElMessage } from 'element-plus'\r\nimport TopBar from '../components/TopBar.vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { useUserStore } from '../stores/userStore'  // ✅ 路径根据实际位置调整\r\nconst userStore = useUserStore()\r\nconst route = useRoute()\r\nconst role = route.query.role || 'patient'\r\nconst router = useRouter()\r\nconst username = ref('')\r\nconst password = ref('')\r\n\r\nconst handleLogin = () => {\r\n  userStore.setUser({\r\n            username: '123',\r\n            role: 'patient',\r\n            token:  ''\r\n        })\r\n if (role === 'doctor')\r\n   router.push('/doctor/dashboard')\r\n else if (role === 'administrator')\r\n   router.push('/administrator/dashboard')\r\n else\r\n   router.push('/patient/dashboard')\r\n\r\n}\r\n// const handleLogin = async () => {\r\n//    try {\r\n//      const res = await axios.post('http://localhost:8000/login/', {\r\n//        username: username.value,\r\n//        password: password.value\r\n//      })\r\n\r\n//      if (res.data.status === 'success') {\r\n//         // ✅ 设置用户状态（可用于权限控制）\r\n//         userStore.setUser({\r\n//             username: username.value,\r\n//             role: role,\r\n//             token: res.data.token || ''\r\n//         })\r\n\r\n//        ElMessage.success('登录成功')\r\n//         if (role === 'doctor')\r\n//            router.push('/doctor/dashboard')\r\n//         else if (role === 'admin')\r\n//            router.push('/administrator/dashboard')\r\n//         else\r\n//            router.push('/patient/dashboard')\r\n//      } else {\r\n//        ElMessage.error(res.data.message || '用户名或密码错误')\r\n//      }\r\n//    } catch (error) {\r\n// //     console.error(error)\r\n// //     ElMessage.error('无法连接服务器')\r\n//            if (error.response) {\r\n//       // 服务器返回了 4xx/5xx 响应\r\n//       const status = error.response.status;\r\n      \r\n//       // 根据状态码显示不同错误\r\n//       if (status === 400) {\r\n//         ElMessage.error('用户名或密码错误');\r\n//       } else if (status === 500) {\r\n//         ElMessage.error('服务器内部错误');\r\n//       } else {\r\n//         ElMessage.error(`请求失败（错误码：${status}）`);\r\n//       }\r\n\r\n//     } else {\r\n//       // 网络错误（无法连接服务器）\r\n//       ElMessage.error('无法连接服务器');\r\n//     }\r\n//    }\r\n//  }\r\n</script>\r\n\r\n<style scoped>\r\n.login-page {\r\n  height: calc(100vh - 150px); /* 扣除顶栏高度 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #eef3f5 url('../assets/hospital-building.png') no-repeat center center;\r\n  /* background: #eef3f5; */\r\n  background-size: cover;\r\n  overflow: hidden;\r\n}\r\n/* ✅ 模糊遮罩层 */\r\n.bg-blur-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  backdrop-filter: blur(8px);\r\n  background-color: rgba(255, 255, 255, 0.3); /* 加一点透明白提升亮度 */\r\n  z-index: 1;\r\n}\r\n.login-card {\r\n  position: relative;\r\n  z-index: 2;\r\n  width: 320px;\r\n  padding: 40px 30px;\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.avatar {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  margin-bottom: 16px;\r\n}\r\n\r\nh2 {\r\n  margin-bottom: 24px;\r\n  color: #333;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  margin-bottom: 24px;\r\n}\r\n\r\ninput {\r\n  padding: 12px 16px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  border: 1px solid #ccc;\r\n  outline: none;\r\n  transition: border 0.3s;\r\n}\r\n\r\ninput:focus {\r\n  border-color: #409eff;\r\n}\r\n\r\n.login-btn {\r\n  padding: 12px;\r\n  width: 100%;\r\n  background: #007bff;\r\n  border: none;\r\n  color: white;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.login-btn:hover {\r\n  background: #0056c5;\r\n}\r\n</style>\r\n"],"mappings":";OAU4BA,UAA0B;;EAL7CC,KAAK,EAAC;AAAY;;EAIhBA,KAAK,EAAC;AAAY;;EAIhBA,KAAK,EAAC;AAAY;;uBAZ7BC,mBAAA,CAoBM,cAnBJC,YAAA,CAAUC,MAAA,aAEVC,mBAAA,iBAAoB,EACpBC,mBAAA,CAeM,OAfNC,UAeM,G,0BAdJD,mBAAA,CAAmC;IAA9BL,KAAK,EAAC;EAAiB,6BAE5BI,mBAAA,aAAgB,EAChBC,mBAAA,CAUM,OAVNE,UAUM,G,0BATJF,mBAAA,CAA8D;IAAzDL,KAAK,EAAC,QAAQ;IAACQ,GAA0B,EAA1BT,UAA0B;IAACU,GAAG,EAAC;yDACnDJ,mBAAA,CAAa,YAAT,MAAI,sBAERA,mBAAA,CAGM,OAHNK,UAGM,G,gBAFJL,mBAAA,CAA0D;IAAnDM,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,KAAK;IAd9C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAcwDX,MAAA,CAAAY,QAAQ,GAAAD,MAAA;iDAARX,MAAA,CAAAY,QAAQ,E,mBACtDV,mBAAA,CAA6D;IAAtDM,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC,IAAI;IAfjD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAe2DX,MAAA,CAAAa,QAAQ,GAAAF,MAAA;iDAARX,MAAA,CAAAa,QAAQ,E,KAG3DX,mBAAA,CAA0D;IAAlDL,KAAK,EAAC,WAAW;IAAEiB,OAAK,EAAEd,MAAA,CAAAe;KAAa,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}