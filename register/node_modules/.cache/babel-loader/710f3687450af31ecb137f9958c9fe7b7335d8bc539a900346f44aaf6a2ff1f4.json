{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport TopBar from '../components/TopBar.vue';\nexport default {\n  __name: 'LoginView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const username = ref('');\n    const password = ref('');\n\n    // const handleLogin = () => {\n    //   // 暂时直接跳转（后续可接后端验证）\n    //   router.push('/dashboard')\n    // }\n    const handleLogin = async () => {\n      try {\n        const res = await axios.post('http://localhost:8000/api/login/', {\n          username: username.value,\n          password: password.value\n        });\n        if (res.data.status === 'success') {\n          ElMessage.success('登录成功');\n          router.push('/dashboard');\n        } else {\n          ElMessage.error(res.data.message || '用户名或密码错误');\n        }\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('无法连接服务器');\n      }\n    };\n    const __returned__ = {\n      router,\n      username,\n      password,\n      handleLogin,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      TopBar\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","ElMessage","TopBar","router","username","password","handleLogin","res","post","value","data","status","success","push","error","message","console"],"sources":["E:/ZJU_Courses/CS/se/register/src/views/LoginView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <TopBar />\r\n\r\n    <!-- ✅ 添加背景图模糊容器 -->\r\n    <div class=\"login-page\">\r\n      <div class=\"bg-blur-overlay\"></div>\r\n\r\n      <!-- 登录卡片在上面 -->\r\n      <div class=\"login-card\">\r\n        <img class=\"avatar\" src=\"../assets/avatar.png\" alt=\"avatar\" />\r\n        <h2>欢迎回来</h2>\r\n\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"用户名\" v-model=\"username\" />\r\n          <input type=\"password\" placeholder=\"密码\" v-model=\"password\" />\r\n        </div>\r\n\r\n        <button class=\"login-btn\" @click=\"handleLogin\">登录</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from 'axios'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport TopBar from '../components/TopBar.vue'\r\nconst router = useRouter()\r\nconst username = ref('')\r\nconst password = ref('')\r\n\r\n// const handleLogin = () => {\r\n//   // 暂时直接跳转（后续可接后端验证）\r\n//   router.push('/dashboard')\r\n// }\r\nconst handleLogin = async () => {\r\n  try {\r\n    const res = await axios.post('http://localhost:8000/api/login/', {\r\n      username: username.value,\r\n      password: password.value\r\n    })\r\n\r\n    if (res.data.status === 'success') {\r\n      ElMessage.success('登录成功')\r\n      router.push('/dashboard')\r\n    } else {\r\n      ElMessage.error(res.data.message || '用户名或密码错误')\r\n    }\r\n  } catch (error) {\r\n    console.error(error)\r\n    ElMessage.error('无法连接服务器')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-page {\r\n  height: calc(100vh - 150px); /* 扣除顶栏高度 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #eef3f5 url('../assets/hospital-building.png') no-repeat center center;\r\n  /* background: #eef3f5; */\r\n  background-size: cover;\r\n  overflow: hidden;\r\n}\r\n/* ✅ 模糊遮罩层 */\r\n.bg-blur-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  backdrop-filter: blur(8px);\r\n  background-color: rgba(255, 255, 255, 0.3); /* 加一点透明白提升亮度 */\r\n  z-index: 1;\r\n}\r\n.login-card {\r\n  position: relative;\r\n  z-index: 2;\r\n  width: 320px;\r\n  padding: 40px 30px;\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.avatar {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  margin-bottom: 16px;\r\n}\r\n\r\nh2 {\r\n  margin-bottom: 24px;\r\n  color: #333;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  margin-bottom: 24px;\r\n}\r\n\r\ninput {\r\n  padding: 12px 16px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  border: 1px solid #ccc;\r\n  outline: none;\r\n  transition: border 0.3s;\r\n}\r\n\r\ninput:focus {\r\n  border-color: #409eff;\r\n}\r\n\r\n.login-btn {\r\n  padding: 12px;\r\n  width: 100%;\r\n  background: #007bff;\r\n  border: none;\r\n  color: white;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.login-btn:hover {\r\n  background: #0056c5;\r\n}\r\n</style>\r\n"],"mappings":";AAyBA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,MAAM,MAAM,0BAA0B;;;;;;;IAC7C,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,MAAMI,QAAQ,GAAGN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,QAAQ,GAAGP,GAAG,CAAC,EAAE,CAAC;;IAExB;IACA;IACA;IACA;IACA,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,kCAAkC,EAAE;UAC/DJ,QAAQ,EAAEA,QAAQ,CAACK,KAAK;UACxBJ,QAAQ,EAAEA,QAAQ,CAACI;QACrB,CAAC,CAAC;QAEF,IAAIF,GAAG,CAACG,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;UACjCV,SAAS,CAACW,OAAO,CAAC,MAAM,CAAC;UACzBT,MAAM,CAACU,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC,MAAM;UACLZ,SAAS,CAACa,KAAK,CAACP,GAAG,CAACG,IAAI,CAACK,OAAO,IAAI,UAAU,CAAC;QACjD;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdE,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;QACpBb,SAAS,CAACa,KAAK,CAAC,SAAS,CAAC;MAC5B;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}